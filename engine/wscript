def configure(ctx):
    print("Enigine configure")
    ctx.standard_defs()
    ctx.write_config_header('config.h')

def build(ctx):
    libs = []
    if ("LINUX" == ctx.env.DEST_OS.upper()):
        libs = ['sfml-graphics', 'sfml-window', 'sfml-system']
    elif ("DARWIN" == ctx.env.DEST_OS.upper()):
        libs = ['sfml-graphics', 'sfml-window', 'sfml-system']
    source_files = ['EngContainer.cpp',
                    'EngObserver.cpp',
                    'EngSubject.cpp',
                    'EngComponent.cpp',
                    'EngManager.cpp']
    ctx.shlib(
        target = 'enginelib',
        export_includes = '.',
        includes = '.',
        lib = libs,
        source = source_files,
        cflags = [ '-Wall', '-g' ],
        name = "intern_enginelib_sh"
    )
    ctx.stlib(
        target = 'enginelib',
        export_includes = '.',
        includes = '.',
        lib = libs,
        source = source_files,
        cflags = [ '-Wall', '-g' ],
        name = "intern_enginelib_st"
    )
