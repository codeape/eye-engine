def configure(ctx):
    print("sample configure")
    ctx.standard_defs()
    ctx.libckok('libsfml', 'SFML/Graphics.hpp')
    ctx.write_config_header('config.h')

def build(ctx):
    libs = []
    if ("LINUX" == ctx.env.DEST_OS.upper()):
        libs = ['sfml-graphics', 'sfml-window', 'sfml-system']
    elif ("DARWIN" == ctx.env.DEST_OS.upper()):
        libs = ['sfml-graphics', 'sfml-window', 'sfml-system']
    ctx.program(
        source = 'main.cpp',
        target = 'sample',
        includes = '.',
        lib = libs,
        libpath = ['/usr/lib', '/usr/local/lib'],
        cflags = [ '-Wall', '-g' ],
        use = 'intern_enginelib_st'
    )
